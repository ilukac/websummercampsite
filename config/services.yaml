# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    ngsite.layouts.block.plugin.vertical_whitespace.top:
        none: 'block.plugin.vertical_whitespace.top_none'
        small: 'block.plugin.vertical_whitespace.top_small'
        medium: 'block.plugin.vertical_whitespace.top_medium'
        large: 'block.plugin.vertical_whitespace.top_large'

    ngsite.layouts.block.plugin.vertical_whitespace.bottom:
        none: 'block.plugin.vertical_whitespace.bottom_none'
        small: 'block.plugin.vertical_whitespace.bottom_small'
        medium: 'block.plugin.vertical_whitespace.bottom_medium'
        large: 'block.plugin.vertical_whitespace.bottom_large'

    ngsite.layouts.block.plugin.background_color.colors:
        white: 'block.plugin.background_color.white'
        grey: 'block.plugin.background_color.grey'

    ngsite.layouts.block.plugin.set_container.sizes:
        '': 'block.plugin.set_container.regular'
        'narrow': 'block.plugin.set_container.narrow'
        'wide': 'block.plugin.set_container.wide'

    netgen_layouts.contentful.routing.content_types: [category, news, topic, workshop]

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $spaceId: '%env(CONTENTFUL_SPACE_ID)%'
            $siteInfoId: '%env(CONTENTFUL_SITEINFO_ID)%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

#    netgen_layouts.contentful.templating.twig.extension.markdown.engine:
#        class: Aptoma\Twig\Extension\MarkdownEngine\MichelfMarkdownEngine
#        public: false

#    netgen_layouts.contentful.templating.twig.extension.markdown:
#        class: Aptoma\Twig\Extension\MarkdownExtension
#        public: false
#        arguments:
#            - "@netgen_layouts.contentful.templating.twig.extension.markdown.engine"
#        tags:
#            - { name: twig.extension }

    Netgen\Layouts\Contentful\Service\Contentful:
        alias: 'netgen_layouts.contentful.service'

    App\Layouts\Block\Plugin\VerticalWhitespacePlugin:
        arguments:
            - "%ngsite.layouts.block.plugin.vertical_whitespace.top%"
            - "%ngsite.layouts.block.plugin.vertical_whitespace.bottom%"
        tags:
            - { name: netgen_layouts.block_definition_handler.plugin, priority: 200 }

    App\Layouts\Block\Plugin\BackgroundColorPlugin:
        arguments:
            - "%ngsite.layouts.block.plugin.background_color.colors%"
        tags:
            - { name: netgen_layouts.block_definition_handler.plugin, priority: 400 }

    App\Layouts\Block\Plugin\SetContainerPlugin:
        arguments:
            - "%ngsite.layouts.block.plugin.set_container.sizes%"
        tags:
            - { name: netgen_layouts.block_definition_handler.plugin, priority: -100 }
